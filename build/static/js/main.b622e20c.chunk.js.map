{"version":3,"sources":["App.tsx","index.tsx"],"names":["isPickerQuestion","tbd","question","App","props","React","useState","optionIndices","setOptionIndices","console","log","config","result","reduce","acc","cur","options","content","className","map","option","index","onClick","text","alt","src","logoSrc","description","href","target","targetBlank","rel","length","slice","close","DEMO_RESULT","window","__PICKER_CONFIG__","__openPickerApp","root","onClose","ReactDOM","render","StrictMode","unmountComponentAtNode"],"mappings":"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","file":"static/js/main.b622e20c.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nexport interface PickerOption {\n  readonly text: string\n  readonly result: PickerQuestion | SummaryPage\n}\n\nexport interface SummaryPage {\n  readonly logoSrc: string\n  readonly description: string\n  readonly href: string\n  readonly targetBlank?: boolean\n}\n\nexport interface PickerQuestion {\n  readonly question: string\n  readonly options: PickerOption[]\n}\n\nconst isPickerQuestion = (tbd: SummaryPage | PickerQuestion): tbd is PickerQuestion => {\n  return typeof (tbd as PickerQuestion).question !== 'undefined'\n}\n\ninterface Props {\n  readonly close: () => void\n  readonly config: PickerQuestion\n}\n\nconst App: React.FC<Props> = (props) => {\n  const [optionIndices, setOptionIndices] = React.useState<number[]>([])\n\n  console.log('optionIndices', optionIndices)\n  console.log('props.config', props.config)\n  \n  const result = optionIndices.reduce<SummaryPage | PickerQuestion>((acc, cur) => {\n    console.log('cur', cur)\n    console.log('acc', acc)\n    if (isPickerQuestion(acc)) {\n      console.log('picker question', acc.options[cur]);\n      \n      return acc.options[cur].result\n    }\n    return acc\n  }, props.config)\n\n  console.log('result', result);\n  \n\n  let content: JSX.Element | null = null\n  if (isPickerQuestion(result)) {\n    content = <>\n      <div className='__picker-app-left-side'>\n        {result.question}\n      </div>\n      <div className='__picker-app-right-side'>\n        {result.options.map((option, index) => (\n          <button\n            key={option.text}\n            className='__picker-app-right-side-option'\n            onClick={() => setOptionIndices([...optionIndices, index])}\n          >\n            {option.text}\n          </button>\n        ))}\n      </div>\n    </>\n  } else {\n    content = <>\n      <div className='__picker-app-left-side'>\n        Check this out:\n      </div>\n      <div className='__picker-app-right-side __picker-app-right-side-flex'>\n        <img className='__picker-app-right-side-logo' alt='logo' src={result.logoSrc} />\n        <p className='__picker-app-right-side-paragraph'>\n          {result.description}\n        </p>\n\n        <a\n          className='__picker-app-right-side-result-button'\n          href={result.href}\n          target={result.targetBlank ? '_blank' : ''}\n          rel='noreferrer'\n        >\n          Take me there\n        </a>\n      </div>\n    </>\n  }\n\n  return (\n    <div className='__picker-app'>\n      {content}\n      {\n        optionIndices.length > 0\n          ? (\n            <button\n              className='__picker-app-back-button'\n              onClick={() => setOptionIndices(optionIndices.slice(0, optionIndices.length - 1))}\n            >\n              {'< back'}\n            </button>\n\n          ) : null\n      }\n      <button\n        className='__picker-app-close-button'\n        onClick={props.close}\n      >\n        X\n      </button>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App, { PickerQuestion } from './App'\n\nconst LOREM = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n\nconst DEMO_RESULT = {\n  description: LOREM,\n  logoSrc: 'https://photobooth.co/wp-content/themes/photobooth/img/logo-white.png',\n  href: 'https://photobooth.co/themes',\n  targetBlank: true\n}\n\nconst config: PickerQuestion = (window as any).__PICKER_CONFIG__ || {\n  question: 'I am:',\n  options: [\n    {\n      text: 'a company',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'a simple branded experience',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'ideas for a party',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'a virtual experience',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'a long term install',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'trade show solutions',\n            result: DEMO_RESULT\n          }\n        ]\n      }\n    },\n    {\n      text: 'an agency',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'activation ideas',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'a simple branded experience',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'something totally custom',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'to discuss options with you',\n            result: DEMO_RESULT\n          }\n        ]\n      }\n    },\n    {\n      text: 'planning a wedding',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'a photo booth that prints',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'a DIY photo booth',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'my guests to take their own photos',\n            result: DEMO_RESULT\n          }\n        ]\n      }\n    },\n    {\n      text: 'having a party',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'a photo booth that prints',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'a DIY photo booth',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'my guests to take their own photos',\n            result: DEMO_RESULT\n          }\n        ]\n      }\n    },\n    {\n      text: 'totally lost',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'someone to call me',\n            result: DEMO_RESULT\n          },\n          {\n            text: 'lots of alcohol',\n            result: DEMO_RESULT\n          }\n        ]\n      }\n    }\n  ]\n}\n\n// @ts-ignore\nwindow.__openPickerApp = (root: HTMLElement, onClose: () => void) => {\n  const close = () => {\n    ReactDOM.unmountComponentAtNode(root)\n    onClose()\n  }\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App config={config} close={close} />\n    </React.StrictMode>,\n    root\n  )\n}\n"],"sourceRoot":""}