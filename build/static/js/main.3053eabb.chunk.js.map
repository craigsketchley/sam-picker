{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","props","React","useState","optionIndex","setOptionIndex","config","options","result","className","question","map","option","index","href","onClick","close","rel","target","targetBlank","text","window","__PICKER_CONFIG__","__openPickerApp","root","onClose","ReactDOM","render","StrictMode","unmountComponentAtNode"],"mappings":"4MAqEeA,G,MAjDc,SAACC,GAAW,IAAD,IACAC,IAAMC,UAAU,GADhB,mBAC/BC,EAD+B,KAClBC,EADkB,KAGhCC,GAAS,UAAAL,EAAMK,OAAOC,QAAQH,UAArB,eAAmCI,SAAUP,EAAMK,OAElE,OACE,sBAAKG,UAAU,eAAf,UACE,qBAAKA,UAAU,yBAAf,SACGH,EAAOI,WAEV,qBAAKD,UAAU,0BAAf,SACGH,EAAOC,QAAQI,KAAI,SAACC,EAAQC,GAC3B,OAAID,EAAOE,KAEP,mBAEEL,UAAU,iCACVM,QAASd,EAAMe,MACfF,KAAMF,EAAOE,KACbG,IAAI,aACJC,OAAQN,EAAOO,YAAc,SAAW,GAN1C,SAQGP,EAAOQ,MAPHR,EAAOQ,MAUPR,EAAOJ,OAEd,wBAEEC,UAAU,iCACVM,QAAS,kBAAMV,EAAeQ,IAHhC,SAKGD,EAAOQ,MAJHR,EAAOQ,MAQX,UAGX,wBACEX,UAAU,4BACVM,QAASd,EAAMe,MAFjB,oBCrDAV,EAAuBe,OAAOC,mBAAqB,CACvDZ,SAAU,QACVH,QAAS,CACP,CACEa,KAAM,YACNZ,OAAQ,CACNE,SAAU,YACVH,QAAS,CACP,CACEa,KAAM,8BACNN,KAAM,+BACNK,aAAa,GAEf,CACEC,KAAM,oBACNN,KAAM,kCACNK,aAAa,GAEf,CACEC,KAAM,uBACNN,KAAM,wBACNK,aAAa,GAEf,CACEC,KAAM,sBACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,uBACNN,KAAM,2BACNK,aAAa,MAKrB,CACEC,KAAM,YACNZ,OAAQ,CACNE,SAAU,YACVH,QAAS,CACP,CACEa,KAAM,mBACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,8BACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,2BACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,8BACNN,KAAM,2BACNK,aAAa,MAKrB,CACEC,KAAM,qBACNZ,OAAQ,CACNE,SAAU,YACVH,QAAS,CACP,CACEa,KAAM,4BACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,oBACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,qCACNN,KAAM,2BACNK,aAAa,MAKrB,CACEC,KAAM,iBACNZ,OAAQ,CACNE,SAAU,YACVH,QAAS,CACP,CACEa,KAAM,4BACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,oBACNN,KAAM,2BACNK,aAAa,GAEf,CACEC,KAAM,qCACNN,KAAM,2BACNK,aAAa,MAKrB,CACEC,KAAM,eACNZ,OAAQ,CACNE,SAAU,YACVH,QAAS,CACP,CACEa,KAAM,qBACNN,KAAM,gCACNK,aAAa,GAEf,CACEC,KAAM,kBACNN,KAAM,2BACNK,aAAa,QASzBE,OAAOE,gBAAkB,SAACC,EAAmBC,GAM3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKtB,OAAQA,EAAQU,MAPX,WACZU,IAASG,uBAAuBL,GAChCC,SAOAD,M","file":"static/js/main.3053eabb.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nexport interface PickerOption {\n  readonly text: string\n  readonly href?: string\n  readonly targetBlank?: boolean\n  readonly result?: PickerConfig\n}\n\nexport interface PickerConfig {\n  readonly question: string\n  readonly options: PickerOption[]\n}\n\ninterface Props {\n  readonly close: () => void\n  readonly config: PickerConfig\n}\n\nconst App: React.FC<Props> = (props) => {\n  const [optionIndex, setOptionIndex] = React.useState(-1)\n\n  const config = props.config.options[optionIndex]?.result || props.config\n\n  return (\n    <div className='__picker-app'>\n      <div className='__picker-app-left-side'>\n        {config.question}\n      </div>\n      <div className='__picker-app-right-side'>\n        {config.options.map((option, index) => {\n          if (option.href) {\n            return (\n              <a\n                key={option.text}\n                className='__picker-app-right-side-option'\n                onClick={props.close}\n                href={option.href}\n                rel='noreferrer'\n                target={option.targetBlank ? '_blank' : ''}\n              >\n                {option.text}\n              </a>\n            )\n          } else if (option.result) {\n            return (\n              <button\n                key={option.text}\n                className='__picker-app-right-side-option'\n                onClick={() => setOptionIndex(index)}\n              >\n                {option.text}\n              </button>\n            )\n          }\n          return null\n        })}\n      </div>\n      <button\n        className='__picker-app-close-button'\n        onClick={props.close}\n      >\n        X\n      </button>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App, { PickerConfig } from './App'\n\n// @ts-ignore\nconst config: PickerConfig = window.__PICKER_CONFIG__ || {\n  question: 'I am:',\n  options: [\n    {\n      text: 'a company',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'a simple branded experience',\n            href: 'https://photobooth.co/themes',\n            targetBlank: true\n          },\n          {\n            text: 'ideas for a party',\n            href: 'https://photobooth.co/pro-booth',\n            targetBlank: true\n          },\n          {\n            text: 'a virtual experience',\n            href: 'https://brandmatic.co',\n            targetBlank: true\n          },\n          {\n            text: 'a long term install',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'trade show solutions',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          }\n        ]\n      }\n    },\n    {\n      text: 'an agency',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'activation ideas',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'a simple branded experience',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'something totally custom',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'to discuss options with you',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          }\n        ]\n      }\n    },\n    {\n      text: 'planning a wedding',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'a photo booth that prints',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'a DIY photo booth',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'my guests to take their own photos',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          }\n        ]\n      }\n    },\n    {\n      text: 'having a party',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'a photo booth that prints',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'a DIY photo booth',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          },\n          {\n            text: 'my guests to take their own photos',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          }\n        ]\n      }\n    },\n    {\n      text: 'totally lost',\n      result: {\n        question: 'and want:',\n        options: [\n          {\n            text: 'someone to call me',\n            href: 'https://photobooth.co/contact',\n            targetBlank: true\n          },\n          {\n            text: 'lots of alcohol',\n            href: 'https://simpleasmilk.com',\n            targetBlank: true\n          }\n        ]\n      }\n    }\n  ]\n}\n\n// @ts-ignore\nwindow.__openPickerApp = (root: HTMLElement, onClose: () => void) => {\n  const close = () => {\n    ReactDOM.unmountComponentAtNode(root)\n    onClose()\n  }\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App config={config} close={close} />\n    </React.StrictMode>,\n    root\n  )\n}\n"],"sourceRoot":""}